Index: app/src/main/java/com/org/zapayapp/activity/LendBorrowActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.org.zapayapp.activity;\r\nimport android.app.Dialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.Spannable;\r\nimport android.text.SpannableString;\r\nimport android.text.TextUtils;\r\nimport android.text.TextWatcher;\r\nimport android.text.style.ForegroundColorSpan;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.CheckBox;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.content.res.ResourcesCompat;\r\nimport androidx.fragment.app.DialogFragment;\r\nimport androidx.recyclerview.widget.DefaultItemAnimator;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport com.dd.ShadowLayout;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.gson.JsonElement;\r\nimport com.google.gson.JsonObject;\r\nimport com.org.zapayapp.R;\r\nimport com.org.zapayapp.adapters.ContactAdapter;\r\nimport com.org.zapayapp.adapters.IndicatorAdapter;\r\nimport com.org.zapayapp.adapters.PaybackAdapter;\r\nimport com.org.zapayapp.listener.ContactListener;\r\nimport com.org.zapayapp.model.ContactModel;\r\nimport com.org.zapayapp.model.PabackModel;\r\nimport com.org.zapayapp.model.TransactionModel;\r\nimport com.org.zapayapp.uihelpers.CustomTextInputLayout;\r\nimport com.org.zapayapp.utils.CommonMethods;\r\nimport com.org.zapayapp.utils.Const;\r\nimport com.org.zapayapp.utils.DateFormat;\r\nimport com.org.zapayapp.utils.DatePickerFragmentDialogue;\r\nimport com.org.zapayapp.utils.EndlessRecyclerViewScrollListener;\r\nimport com.org.zapayapp.utils.SharedPref;\r\nimport com.org.zapayapp.utils.WVDateLib;\r\nimport com.org.zapayapp.webservices.APICallback;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport java.text.ParseException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport retrofit2.Call;\r\n\r\npublic class LendBorrowActivity extends BaseActivity implements View.OnClickListener, DatePickerFragmentDialogue.DatePickerCallback, APICallback, ContactListener {\r\n    private RecyclerView indicatorRecycler;\r\n    private List<String> listIndicator;\r\n    private TextView nextButtonTV, backButtonTV;\r\n    private ShadowLayout lendShadowBack, lendShadowNext;\r\n    private int selectedPos = 0;\r\n    private IndicatorAdapter indicatorAdapter;\r\n    private TextView lendTxtHeader, lendTxtAmount, lendTermsTxtOption, lendTermsTxtPercent, lendTermsTxtFee, lendTermsTxtDiscount, lendTermsTxtNone;\r\n    private TextInputEditText lendAmountEdtAmount, lendTermsEdtOption, lendPaymentEdtNo;\r\n\r\n    private LinearLayout lendViewAmount, lendViewTerms, lendViewPayment, lendViewPayback, lendViewBorrow, lendViewLending, lendViewContact;\r\n    private int isTermsOption, isNoPayment, paybackPos;\r\n\r\n    private float finalTotalAmount;//instalment amount\r\n    private float installmentAmount;//instalment amount\r\n    private float amount;   //enter amount\r\n    private float finalTotalPayBackAmount;//after add term amount\r\n    private String paymentDate;\r\n\r\n    private WVDateLib wvDateLib;\r\n    private RecyclerView paybackRecycler, contactRecycler;\r\n    private List<PabackModel> paybackList;\r\n    private PaybackAdapter paybackAdapter;\r\n    private ContactAdapter contactAdapter;\r\n    private Intent intent;\r\n    private boolean isBorrow;\r\n    private boolean isBack;\r\n\r\n    private List<ContactModel> contactNumberList;\r\n    private EndlessRecyclerViewScrollListener scrollListener;\r\n    private int pageNo = 0;\r\n    private TextView noDataTv;\r\n    private String toId = \"\";\r\n    private int request_by;\r\n    private String termValue = \"\";\r\n\r\n    //borrow....\r\n    private TextView amountTV, termTV, noOfPaymentTV, paymentDateTV, totalPayBackTV;\r\n\r\n    //Lending....\r\n    TextView l_amountTV;\r\n    TextView lTermTV;\r\n    TextView lNoOfPaymentTV;\r\n    TextView lPaymentDateTV;\r\n    TextView totalReceivedBackTV;\r\n\r\n    //this use for negotiation\r\n    private TransactionModel transactionModel;\r\n    private CustomTextInputLayout lendAmountEdtAmountInputLayout, lendTermsInputLayout, lendNoOfPaymentInputLayout;\r\n    private ArrayList<String> dateListTitle;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_lend_borrow);\r\n        init();\r\n        getIntentValues();\r\n        initAction();\r\n    }\r\n\r\n    private void init() {\r\n        indicatorRecycler = findViewById(R.id.indicatorRecycler);\r\n        indicatorRecycler.setLayoutManager(new LinearLayoutManager(this, RecyclerView.HORIZONTAL, false));\r\n        indicatorRecycler.setItemAnimator(new DefaultItemAnimator());\r\n\r\n        lendTxtHeader = findViewById(R.id.lendTxtHeader);\r\n        lendTxtAmount = findViewById(R.id.lendTxtAmount);\r\n        nextButtonTV = findViewById(R.id.nextButtonTV);\r\n        backButtonTV = findViewById(R.id.backButtonTV);\r\n        lendShadowBack = findViewById(R.id.lendShadowBack);\r\n        lendShadowNext = findViewById(R.id.lendShadowNext);\r\n\r\n        lendAmountEdtAmountInputLayout = findViewById(R.id.lendAmountEdtAmountInputLayout);\r\n        lendTermsInputLayout = findViewById(R.id.lendTermsInputLayout);\r\n        lendNoOfPaymentInputLayout = findViewById(R.id.lendNoOfPaymentInputLayout);\r\n\r\n        listIndicator = new ArrayList<>();\r\n        wvDateLib = new WVDateLib(this);\r\n\r\n\r\n        dateListTitle = new ArrayList<>();\r\n        dateListTitle.add(getString(R.string.first_select_date));\r\n        dateListTitle.add(getString(R.string.second_select_date));\r\n        dateListTitle.add(getString(R.string.third_select_date));\r\n        dateListTitle.add(getString(R.string.fourth_select_date));\r\n        dateListTitle.add(getString(R.string.fifth_select_date));\r\n        dateListTitle.add(getString(R.string.sixth_select_date));\r\n        dateListTitle.add(getString(R.string.seventh_select_date));\r\n        dateListTitle.add(getString(R.string.eighth_select_date));\r\n        dateListTitle.add(getString(R.string.ninth_select_date));\r\n    }\r\n\r\n    private void initAction() {\r\n        listIndicator.add(getString(R.string.amount));\r\n        listIndicator.add(getString(R.string.terms));\r\n        listIndicator.add(getString(R.string.no_of_payments));\r\n        listIndicator.add(getString(R.string.payback_date));\r\n        if (isBorrow) {\r\n            request_by = 2;\r\n            listIndicator.add(getString(R.string.borrow_summary_));\r\n        } else {\r\n            request_by = 1;\r\n            listIndicator.add(getString(R.string.lending_summary_));\r\n        }\r\n        listIndicator.add(getString(R.string.select_contact));\r\n\r\n        indicatorAdapter = new IndicatorAdapter(this, listIndicator, isBorrow);\r\n        indicatorRecycler.setAdapter(indicatorAdapter);\r\n        nextButtonTV.setOnClickListener(this);\r\n        backButtonTV.setOnClickListener(this);\r\n\r\n        initAmountView();\r\n        initTermsView();\r\n        initPaymentView();\r\n        initPaybackView();\r\n        initBorrowView();\r\n        initLendingView();\r\n        initContactView();\r\n        setIndicatorView(0);\r\n    }\r\n\r\n    private void getIntentValues() {\r\n        intent = getIntent();\r\n        if (intent != null) {\r\n            isBorrow = intent.getBooleanExtra(\"isBorrow\", false);\r\n        }\r\n\r\n        //this code use for nagotiation......\r\n        if (getIntent().getSerializableExtra(\"transactionModel\") != null) {\r\n            transactionModel = (TransactionModel) getIntent().getSerializableExtra(\"transactionModel\");\r\n        }\r\n    }\r\n\r\n    private void initAmountView() {\r\n        lendViewAmount = findViewById(R.id.lendViewAmount);\r\n        lendAmountEdtAmount = findViewById(R.id.lendAmountEdtAmount);\r\n        lendAmountEdtAmount.setImeOptions(EditorInfo.IME_ACTION_DONE);\r\n        //lendAmountEdtAmount.setRawInputType(InputType.TYPE_NUMBER_FLAG_DECIMAL);\r\n\r\n        lendAmountEdtAmount.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                /*\r\n                    amount = Float.parseFloat(s.toString());\r\n                    lendTxtAmount.setText(s);\r\n                */\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                if (s != null & s.length() > 0) {\r\n                    amount = Float.parseFloat(s.toString());\r\n                    lendTxtAmount.setText(s);\r\n                } else {\r\n                    amount = Float.parseFloat(\"0\");\r\n                    lendTxtAmount.setText(\"\");\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        //nigotiation\r\n        if (transactionModel != null && transactionModel.getAmount() != null && transactionModel.getAmount().length() > 0) {\r\n            lendAmountEdtAmount.setText(transactionModel.getAmount());\r\n        }\r\n    }\r\n\r\n    private void initTermsView() {\r\n        lendViewTerms = findViewById(R.id.lendViewTerms);\r\n        lendTermsEdtOption = findViewById(R.id.lendTermsEdtOption);\r\n        lendTermsEdtOption.setImeOptions(EditorInfo.IME_ACTION_DONE);\r\n        //lendTermsEdtOption.setRawInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES);\r\n\r\n        lendTermsTxtOption = findViewById(R.id.lendTermsTxtOption);\r\n\r\n        lendTermsTxtPercent = findViewById(R.id.lendTermsTxtPercent);\r\n        lendTermsTxtFee = findViewById(R.id.lendTermsTxtFee);\r\n        lendTermsTxtDiscount = findViewById(R.id.lendTermsTxtDiscount);\r\n        lendTermsTxtNone = findViewById(R.id.lendTermsTxtNone);\r\n\r\n        lendTermsTxtPercent.setOnClickListener(this);\r\n        lendTermsTxtFee.setOnClickListener(this);\r\n        lendTermsTxtDiscount.setOnClickListener(this);\r\n        lendTermsTxtNone.setOnClickListener(this);\r\n\r\n        lendTermsEdtOption.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                setOptionAmount();\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n        //Negotiation....\r\n        if (transactionModel != null && transactionModel.getTermsValue() != null && transactionModel.getTermsValue().length() > 0) {\r\n            if (!transactionModel.getTermsValue().equals(\"0\"))\r\n                lendTermsEdtOption.setText(transactionModel.getTermsValue());\r\n        }\r\n\r\n        if (transactionModel != null && transactionModel.getTermsType() != null && transactionModel.getTermsType().length() > 0) {\r\n            int termType = Integer.parseInt(transactionModel.getTermsType()) - 1; //term 1 jyada aa rhi h\r\n            selectedTermsOption(termType);\r\n        }\r\n\r\n    }\r\n\r\n    private void initPaymentView() {\r\n        lendViewPayment = findViewById(R.id.lendViewPayment);\r\n        lendPaymentEdtNo = findViewById(R.id.lendPaymentEdtNo);\r\n        lendPaymentEdtNo.setImeOptions(EditorInfo.IME_ACTION_DONE);\r\n\r\n\r\n        lendPaymentEdtNo.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                setPaymentAmount();\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        if (transactionModel != null && transactionModel.getNoOfPayment() != null && transactionModel.getNoOfPayment().length() > 0) {\r\n            lendPaymentEdtNo.setText(transactionModel.getNoOfPayment());\r\n\r\n        }\r\n    }\r\n\r\n    private void initPaybackView() {\r\n        lendViewPayback = findViewById(R.id.lendViewPayback);\r\n        paybackRecycler = findViewById(R.id.paybackRecycler);\r\n        paybackRecycler.setLayoutManager(new LinearLayoutManager(this, RecyclerView.VERTICAL, false));\r\n        paybackRecycler.setItemAnimator(new DefaultItemAnimator());\r\n        paybackList = new ArrayList<>();\r\n\r\n        //for negotiation\r\n        /*if (transactionModel.getPayDate()!=null&&transactionModel.getPayDate().length()>0){\r\n            try {\r\n                JSONArray jsonObject=new JSONArray(transactionModel.getPayDate());\r\n                for (int i=0;i<jsonObject.length();i++){\r\n                  JSONObject jsonObject1=jsonObject.getJSONObject(i);\r\n                  String date= jsonObject1.getString(\"date\");\r\n                    paybackList.add(new PabackModel(date, true));\r\n                }\r\n\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }*/\r\n    }\r\n\r\n\r\n    private void initBorrowView() {\r\n        lendViewBorrow = findViewById(R.id.lendViewBorrow);\r\n        amountTV = findViewById(R.id.amountTV);\r\n        termTV = findViewById(R.id.termTV);\r\n        noOfPaymentTV = findViewById(R.id.noOfPaymentTV);\r\n        paymentDateTV = findViewById(R.id.paymentDateTV);\r\n        totalPayBackTV = findViewById(R.id.totalPayBackTV);\r\n\r\n       /* amountTV.setText(String.valueOf(amount));\r\n        String termValue= lendTermsEdtOption.getText().toString().trim();\r\n        if (isTermsOption + 1==1){\r\n           // termTV.setText(\"@14% or $7.00\");\r\n            termTV.setText(\"@\"+termValue+\"% or &\"+finalTotalAmount);\r\n        }else if (isTermsOption + 1==2){\r\n            termTV.setText(\"@\"+termValue+\"Fee or &\"+finalTotalAmount);\r\n        }else if (isTermsOption + 1==3){\r\n            termTV.setText(\"@\"+termValue+\"Discount or &\"+finalTotalAmount);\r\n        }else if (isTermsOption + 1==4){\r\n            termTV.setText(\"@\"+termValue+\"None or &\"+finalTotalAmount);\r\n        }\r\n\r\n        noOfPaymentTV.setText(String.valueOf(isNoPayment));\r\n        paymentDateTV.setText(paymentDate);\r\n        totalPayBackTV.setText(String.valueOf(finalTotalPayBackAmount));*/\r\n    }\r\n\r\n    private void initLendingView() {\r\n        lendViewLending = findViewById(R.id.lendViewLending);\r\n        l_amountTV = findViewById(R.id.l_amountTV);\r\n        lTermTV = findViewById(R.id.lTermTV);\r\n        lNoOfPaymentTV = findViewById(R.id.lNoOfPaymentTV);\r\n        lPaymentDateTV = findViewById(R.id.lPaymentDateTV);\r\n        totalReceivedBackTV = findViewById(R.id.totalReceivedBackTV);\r\n    }\r\n\r\n    private void initContactView() {\r\n        // contactList = new ArrayList<>();\r\n        contactNumberList = new ArrayList<>();\r\n        noDataTv = findViewById(R.id.noDataTv);\r\n\r\n        lendViewContact = findViewById(R.id.lendViewContact);\r\n        contactRecycler = findViewById(R.id.contactRecycler);\r\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this, RecyclerView.VERTICAL, false);\r\n        contactRecycler.setLayoutManager(layoutManager);\r\n        contactRecycler.setItemAnimator(new DefaultItemAnimator());\r\n\r\n\r\n        scrollListener = new EndlessRecyclerViewScrollListener(layoutManager) {\r\n            @Override\r\n            public void onLoadMore(int page, int totalItemsCount) {\r\n                pageNo = page;\r\n                callAPIGetContactList(pageNo);\r\n            }\r\n        };\r\n        contactRecycler.addOnScrollListener(scrollListener);\r\n        pageNo = 0;\r\n        callAPIGetContactList(pageNo);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.nextButtonTV:\r\n                if (indicatorAdapter.getSelectedPos() < listIndicator.size() - 1) {\r\n                    //selectedPos = indicatorAdapter.getSelectedPos() + 1;\r\n                    //indicatorAdapter.setSelected(selectedPos);\r\n                    //setIndicatorView(selectedPos);\r\n\r\n                    if (selectedPos == 0) {\r\n                        if (wValidationLib.isValidAmount(lendAmountEdtAmountInputLayout, lendAmountEdtAmount, getString(R.string.important), getString(R.string.enter_amount), true)) {\r\n                            selectedPos = indicatorAdapter.getSelectedPos() + 1;\r\n                            indicatorAdapter.setSelected(selectedPos);\r\n                            setIndicatorView(selectedPos);\r\n                        }\r\n                    } else if (selectedPos == 1) {\r\n                        if (isTermsOption == 3) {\r\n                            selectedPos = indicatorAdapter.getSelectedPos() + 1;\r\n                            indicatorAdapter.setSelected(selectedPos);\r\n                            setIndicatorView(selectedPos);\r\n                        } else {\r\n                            if (wValidationLib.isValidTerm(lendTermsInputLayout, lendTermsEdtOption, getString(R.string.important), getString(R.string.enter_term), true)) {\r\n                                selectedPos = indicatorAdapter.getSelectedPos() + 1;\r\n                                indicatorAdapter.setSelected(selectedPos);\r\n                                setIndicatorView(selectedPos);\r\n                            }\r\n                        }\r\n\r\n                    } else if (selectedPos == 2) {\r\n                        if (wValidationLib.isValidNoOfPayment(lendNoOfPaymentInputLayout, lendPaymentEdtNo, getString(R.string.important), getString(R.string.enter_no_of_payment), true)) {\r\n                            //if (!lendPaymentEdtNo.getText().toString().trim().isEmpty()) {\r\n                            selectedPos = indicatorAdapter.getSelectedPos() + 1;\r\n                            indicatorAdapter.setSelected(selectedPos);\r\n                            setIndicatorView(selectedPos);\r\n                        } //else {\r\n                        // showSimpleAlert(getString(R.string.enter_no_of_payment), \"\");\r\n                        // }\r\n                    } else if (selectedPos == 3) {\r\n                        if (isSelectedAllDate()) {\r\n                            selectedPos = indicatorAdapter.getSelectedPos() + 1;\r\n                            indicatorAdapter.setSelected(selectedPos);\r\n                            setIndicatorView(selectedPos);\r\n                        }\r\n                    } else {\r\n                        selectedPos = indicatorAdapter.getSelectedPos() + 1;\r\n                        indicatorAdapter.setSelected(selectedPos);\r\n                        setIndicatorView(selectedPos);\r\n                    }\r\n\r\n                    // lendAmountEdtAmount\r\n                    // lendTermsEdtOption\r\n                    // lendPaymentEdtNo\r\n\r\n\r\n                } else if (selectedPos == 5) {\r\n                   /* intent = new Intent(LendBorrowActivity.this, HomeActivity.class);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK | Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(R.anim.slide_in_right, R.anim.slide_out_left);\r\n                    finish();*/\r\n                    transactionRequestFunc();\r\n                }\r\n                break;\r\n            case R.id.backButtonTV:\r\n                if (indicatorAdapter.getSelectedPos() <= listIndicator.size() - 1) {\r\n                    selectedPos = indicatorAdapter.getSelectedPos() - 1;\r\n                    indicatorAdapter.setSelected(selectedPos);\r\n                    setIndicatorView(selectedPos);\r\n                }\r\n                break;\r\n            case R.id.lendTermsTxtPercent:\r\n                selectedTermsOption(0);\r\n                break;\r\n            case R.id.lendTermsTxtFee:\r\n                selectedTermsOption(1);\r\n                break;\r\n            case R.id.lendTermsTxtDiscount:\r\n                selectedTermsOption(2);\r\n                break;\r\n            case R.id.lendTermsTxtNone:\r\n                selectedTermsOption(3);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    private boolean isSelectedAllDate() {\r\n        boolean dateSelect = false;\r\n        for (int i = 0; i < paybackList.size(); i++) {\r\n            if (paybackList.get(i).isAddDate()) {\r\n                dateSelect = true;\r\n            } else {\r\n                dateSelect = false;\r\n                showSimpleAlert(getString(R.string.select_date), \"\");\r\n                break;\r\n            }\r\n\r\n        }\r\n        return dateSelect;\r\n    }\r\n\r\n\r\n    private boolean isPreviousDateSelected(int position) {\r\n        boolean dateSelect = false;\r\n        if (position > 0) {\r\n            int pos = 0;\r\n            for (int i = 0; i < paybackList.size(); i++) {\r\n                if (!paybackList.get(i).isAddDate()) {\r\n                    pos = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (paybackList.get(position - 1).isAddDate()) {\r\n                dateSelect = true;\r\n            } else {\r\n                dateSelect = false;\r\n                showSimpleAlert(getString(R.string.select) + \" \" + dateListTitle.get(pos), \"\");\r\n            }\r\n        } else {\r\n            dateSelect = true;\r\n        }\r\n\r\n        return dateSelect;\r\n    }\r\n\r\n\r\n    private void transactionRequestFunc() {\r\n        //activity_status=0  //signup\r\n        //activity_status=1  //updated profile\r\n        //activity_status=2   //added bank account\r\n        //activity_status=3   //verifyed bank account(ready to send request)\r\n\r\n\r\n        if (!toId.equalsIgnoreCase(\"\")) {\r\n            if (SharedPref.getPrefsHelper().getPref(Const.Var.ACTIVITY_STATUS).toString().equals(\"1\")) {\r\n                showSimpleAlert(getString(R.string.please_add_bank_account), getString(R.string.please_add_bank_account));\r\n            } else if (SharedPref.getPrefsHelper().getPref(Const.Var.ACTIVITY_STATUS).toString().equals(\"2\")) {\r\n                showSimpleAlert(getString(R.string.please_verify_bank_account), getString(R.string.please_verify_bank_account));\r\n            } else if (SharedPref.getPrefsHelper().getPref(Const.Var.ACTIVITY_STATUS).toString().equals(\"3\")) {\r\n                //callAPITransactionRequest();\r\n\r\n\r\n                if (transactionModel != null && transactionModel.getId() != null && transactionModel.getId().length() > 0) {\r\n                    callAPITransactionRequest();\r\n                } else {\r\n                    callAPIGetContentDisclaimer();\r\n                   // privacyPolicyDialog();\r\n                }\r\n            }\r\n        } else {\r\n            showSimpleAlert(getString(R.string.please_select_contact), \"\");\r\n        }\r\n    }\r\n\r\n    private void generatePaybackData() {\r\n        paymentDate = DateFormat.dateFormatConvert11(wvDateLib.getCurrentDate());\r\n        //Negotiation.....\r\n        if (transactionModel != null && transactionModel.getPayDate() != null && transactionModel.getPayDate().length() > 0) {\r\n            try {\r\n                if (transactionModel.getNoOfPayment() != null && transactionModel.getNoOfPayment().equalsIgnoreCase(String.valueOf(isNoPayment))) {\r\n                    paybackList.clear();\r\n                    String dataArray = transactionModel.getPayDate().replace(\"\\\\\", \"\");\r\n                    JSONArray jsonObject = new JSONArray(dataArray);\r\n                    for (int i = 0; i < jsonObject.length(); i++) {\r\n                        JSONObject jsonObject1 = jsonObject.getJSONObject(i);\r\n                        String date = jsonObject1.getString(\"date\");\r\n                        paybackList.add(new PabackModel(date, true, true));\r\n                    }\r\n                }\r\n                try {\r\n                    if (transactionModel != null && transactionModel.getPayDate() != null && transactionModel.getPayDate().length() > 0) {\r\n                        try {\r\n                            //lendTxtAmount.setText(DateFormat.getDateFromEpoch(paybackList.get(0).getPayDate()));\r\n                            lendTxtAmount.setText(DateFormat.dateFormatConvert(paybackList.get(0).getPayDate()));\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    } else {\r\n                        lendTxtAmount.setText(DateFormat.dateFormatConvert(paybackList.get(0).getPayDate()));\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                if (paybackList.size() != isNoPayment) {\r\n                    paybackList.clear();\r\n                    lendTxtAmount.setText(paymentDate);\r\n                    for (int i = 0; i < isNoPayment; i++) {\r\n                        paybackList.add(new PabackModel(\"\", false, false));\r\n                    }\r\n                }\r\n                setPaybackAdapter();\r\n\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            if (paybackList.size() != isNoPayment) {\r\n                paybackList.clear();\r\n                lendTxtAmount.setText(paymentDate);\r\n                for (int i = 0; i < isNoPayment; i++) {\r\n                    paybackList.add(new PabackModel(\"\", false, false));\r\n                }\r\n            }\r\n            setPaybackAdapter();\r\n        }\r\n    }\r\n\r\n    private void setPaybackAdapter() {\r\n        paybackAdapter = new PaybackAdapter(this, paybackList);\r\n        paybackRecycler.setAdapter(paybackAdapter);\r\n    }\r\n\r\n    public void selectPaybackDate(int selectedPos) {\r\n        try {\r\n            if (isPreviousDateSelected(selectedPos)) {\r\n                paybackPos = selectedPos;\r\n                DialogFragment newFragment1 = new DatePickerFragmentDialogue();\r\n                Bundle args1 = new Bundle();\r\n                args1.putString(getString(R.string.show), getString(R.string.min_current));\r\n                newFragment1.setArguments(args1);\r\n                newFragment1.show(getSupportFragmentManager(), getString(R.string.date_picker));\r\n            }\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void datePickerCallback(String selectedDate, int year, int month, int day, String from) throws ParseException {\r\n        //String formattedDate = day + \"/\" + month + \"/\" + year;\r\n        String formattedDate = year + \"-\" + month + \"-\" + day;\r\n        if (selectDateValidation(formattedDate)) {\r\n            if (selectDateBackWordValidation(formattedDate)) {\r\n                paybackList.set(paybackPos, new PabackModel(formattedDate, true, false));\r\n                setPaybackAdapter();\r\n                if (paybackPos == 0) {\r\n                    paymentDate = formattedDate;\r\n                    lendTxtAmount.setText(DateFormat.dateFormatConvert(paymentDate));\r\n                }\r\n            } else {\r\n                showSimpleAlert(getString(R.string.Selected_Date_Should_Be_Less_Then) + \" \" + dateListTitle.get(paybackPos + 1), \"\");\r\n            }\r\n        } else {\r\n            //showSimpleAlert(getString(R.string.do_not_select_past_date), \"\");\r\n            showSimpleAlert(getString(R.string.Selected_Date_Should_Be_Greater_Then) + \" \" + dateListTitle.get(paybackPos - 1), \"\");\r\n        }\r\n    }\r\n\r\n    private boolean selectDateValidation(String formattedDate) {\r\n        boolean isSelect = false;\r\n        if (paybackList.size() > 0 && paybackList.get(0).isAddDate() && paybackPos > 0) {\r\n            if (paybackList.get(paybackPos - 1).isAddDate()) {\r\n                long oldDate = DateFormat.getEpochFromDate(paybackList.get(paybackPos - 1).getPayDate());\r\n                long selectDate = DateFormat.getEpochFromDate(formattedDate);\r\n                if (selectDate > oldDate) {\r\n                    isSelect = true;\r\n                }\r\n            }\r\n        } else {\r\n            isSelect = true;\r\n        }\r\n\r\n        return isSelect;\r\n    }\r\n\r\n\r\n    private boolean selectDateBackWordValidation(String formattedDate) {\r\n        boolean isSelect = false;\r\n        if (paybackList.size() > paybackPos + 1) {\r\n            if (paybackList.get(paybackPos + 1).isAddDate()) {\r\n                long oldDate = DateFormat.getEpochFromDate(paybackList.get(paybackPos + 1).getPayDate());\r\n                long selectDate = DateFormat.getEpochFromDate(formattedDate);\r\n                if (selectDate < oldDate) {\r\n                    isSelect = true;\r\n                } else {\r\n                    isSelect = false;\r\n                }\r\n            } else {\r\n                isSelect = true;\r\n            }\r\n        } else {\r\n            isSelect = true;\r\n        }\r\n        return isSelect;\r\n    }\r\n\r\n    private void setContactAdapter() {\r\n        if (contactAdapter != null) {\r\n            contactAdapter.notifyDataSetChanged();\r\n        } else {\r\n            contactAdapter = new ContactAdapter(this, this, contactNumberList);\r\n            contactRecycler.setAdapter(contactAdapter);\r\n        }\r\n\r\n        if (transactionModel != null && transactionModel.getId() != null && transactionModel.getId().length() > 0) {\r\n            String userId = SharedPref.getPrefsHelper().getPref(Const.Var.USER_ID).toString();\r\n\r\n            if (userId.equals(transactionModel.getToId())) {   //negotiation from transaction\r\n                toId = transactionModel.getFromId();\r\n                int selectPosition = 0;\r\n                for (int i = 0; i < contactNumberList.size(); i++) {\r\n                    //this work for transaction\r\n                    if (transactionModel.getFromId().equals(contactNumberList.get(i).getId())) {\r\n                        selectPosition = i;\r\n                        contactAdapter.setSelected(selectPosition, getString(R.string.negotiation));\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            } else if (userId.equals(transactionModel.getFromId())) { //negotiation from history\r\n                toId = transactionModel.getToId();\r\n                int selectPosition = 0;\r\n                for (int i = 0; i < contactNumberList.size(); i++) {\r\n                    //this work for history\r\n                    if (transactionModel.getToId().equals(contactNumberList.get(i).getId())) {\r\n                        selectPosition = i;\r\n                        contactAdapter.setSelected(selectPosition, getString(R.string.negotiation));\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n          /*  Log.e(\"getFromId\", \"getFromId==\" + transactionModel.getFromId());\r\n            Log.e(\"getFromId\", \"getToId==\" + transactionModel.getToId());\r\n            Log.e(\"getFromId\", \"userId==\" + userId);\r\n            toId = transactionModel.getFromId();\r\n            int selectPosition = 0;\r\n            for (int i = 0; i < contactNumberList.size(); i++) {\r\n                //this work for transaction\r\n                if (transactionModel.getFromId().equals(contactNumberList.get(i).getId())) {\r\n                    selectPosition = i;\r\n                    contactAdapter.setSelected(selectPosition, getString(R.string.negotiation));\r\n                    break;\r\n                }\r\n            }*/\r\n        }\r\n    }\r\n\r\n    private void setOptionAmount() {\r\n        try {\r\n            String s = lendTermsEdtOption.getText().toString();\r\n            if (s.length() == 0) {\r\n                s = \"0\";\r\n            }\r\n            SpannableString span1 = new SpannableString(String.valueOf(amount));\r\n            span1.setSpan(new ForegroundColorSpan(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha)), 0, String.valueOf(amount).length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n\r\n            String symbol = \" \";\r\n            float totalAmount = 0;\r\n            if (isTermsOption == 0) {\r\n                float percentAmount = (amount * Float.parseFloat(s)) / 100;\r\n                totalAmount = amount + percentAmount;\r\n                s = String.valueOf(percentAmount);\r\n                symbol = \" + \";\r\n            } else if (isTermsOption == 1) {\r\n                totalAmount = amount + Float.parseFloat(s);\r\n                symbol = \" + \";\r\n            } else if (isTermsOption == 2) {\r\n                totalAmount = amount - Float.parseFloat(s);\r\n                symbol = \" - \";\r\n            } else if (isTermsOption == 3) {\r\n                totalAmount = amount;\r\n                s = \"\";\r\n                symbol = \"\";\r\n            }\r\n            finalTotalAmount = totalAmount;\r\n            finalTotalPayBackAmount = totalAmount;\r\n\r\n\r\n            Spannable span2 = new SpannableString(s);\r\n            span2.setSpan(new ForegroundColorSpan(CommonMethods.getColorWrapper(this, R.color.textColor)), 0, s.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n\r\n            SpannableString span3 = new SpannableString(String.valueOf(totalAmount));\r\n            span3.setSpan(new ForegroundColorSpan(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha)), 0, String.valueOf(totalAmount).length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n\r\n            lendTxtAmount.setText(TextUtils.concat(span1, symbol, span2, \" = \", span3));\r\n        } catch (NumberFormatException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void setPaymentAmount() {\r\n        try {\r\n            String s = lendPaymentEdtNo.getText().toString().trim();\r\n            if (s.length() == 0 || s.equals(\"0\")) {\r\n                s = \"1\";\r\n            }\r\n            SpannableString span1 = new SpannableString(String.valueOf(finalTotalAmount));\r\n            span1.setSpan(new ForegroundColorSpan(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha)), 0, String.valueOf(finalTotalAmount).length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n\r\n            isNoPayment = Integer.parseInt(s);\r\n\r\n            float totalAmount = finalTotalAmount / isNoPayment;\r\n            String symbol = \" / \";\r\n\r\n            // finalTotalAmount = totalAmount;//this line comment by ashok\r\n            installmentAmount = totalAmount;\r\n            Spannable span2 = new SpannableString(s);\r\n            span2.setSpan(new ForegroundColorSpan(CommonMethods.getColorWrapper(this, R.color.textColor)), 0, s.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n\r\n            SpannableString span3 = new SpannableString(String.valueOf(totalAmount));\r\n            span3.setSpan(new ForegroundColorSpan(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha)), 0, String.valueOf(totalAmount).length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\r\n\r\n            lendTxtAmount.setText(TextUtils.concat(span1, symbol, span2, \" = \", span3));\r\n            //paybackList.clear();  //comment by ...\r\n        } catch (NumberFormatException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void setSelectedAmount() {\r\n        lendTxtAmount.setText(String.valueOf(amount));\r\n\r\n    }\r\n\r\n    private void setIndicatorView(int value) {\r\n        lendShadowBack.setVisibility(View.VISIBLE);\r\n        lendShadowNext.setVisibility(View.VISIBLE);\r\n\r\n        lendTxtAmount.setVisibility(View.VISIBLE);\r\n\r\n        lendViewAmount.setVisibility(View.GONE);\r\n        lendViewTerms.setVisibility(View.GONE);\r\n        lendViewPayment.setVisibility(View.GONE);\r\n        lendViewPayback.setVisibility(View.GONE);\r\n        lendViewBorrow.setVisibility(View.GONE);\r\n        lendViewLending.setVisibility(View.GONE);\r\n        lendViewContact.setVisibility(View.GONE);\r\n        nextButtonTV.setText(getString(R.string.next));\r\n        if (getSupportActionBar() != null)\r\n            getSupportActionBar().setDisplayHomeAsUpEnabled(false);\r\n        if (value == 0) {\r\n            // lendAmountEdtAmount\r\n            // lendTermsEdtOption\r\n            // lendPaymentEdtNo\r\n            if (getSupportActionBar() != null)\r\n                getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n            lendViewAmount.setVisibility(View.VISIBLE);\r\n            lendTxtHeader.setText(CommonMethods.capitalize(getString(R.string.amount)));\r\n            lendShadowBack.setVisibility(View.INVISIBLE);\r\n            lendTxtAmount.setTextColor(CommonMethods.getColorWrapper(this, R.color.textColor));\r\n            setSelectedAmount();\r\n\r\n\r\n        } else if (value == 1) {\r\n            lendViewTerms.setVisibility(View.VISIBLE);\r\n            lendTxtHeader.setText(CommonMethods.capitalize(getString(R.string.terms)));\r\n            lendTxtAmount.setTextColor(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha));\r\n            selectedTermsOption(isTermsOption);\r\n\r\n        } else if (value == 2) {\r\n            lendViewPayment.setVisibility(View.VISIBLE);\r\n            lendTxtHeader.setText(CommonMethods.capitalize(getString(R.string.no_of_payments)));\r\n            lendTxtAmount.setTextColor(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha));\r\n            setPaymentAmount();\r\n        } else if (value == 3) {\r\n            lendViewPayback.setVisibility(View.VISIBLE);\r\n            lendTxtHeader.setText(getString(R.string.start_date));\r\n            lendTxtAmount.setTextColor(CommonMethods.getColorWrapper(this, R.color.textColor));\r\n            generatePaybackData();\r\n        } else if (value == 4) {\r\n            if (isBorrow) {\r\n                lendTxtAmount.setVisibility(View.GONE);\r\n                lendViewBorrow.setVisibility(View.VISIBLE);\r\n                lendTxtHeader.setText(CommonMethods.capitalize(getString(R.string.borrow_summary)));\r\n                setBorrowData();\r\n            } else {\r\n                lendTxtAmount.setVisibility(View.GONE);\r\n                lendViewLending.setVisibility(View.VISIBLE);\r\n                lendTxtHeader.setText(CommonMethods.capitalize(getString(R.string.lending_summary)));\r\n                setLendData();\r\n            }\r\n        } else if (value == 5) {\r\n            lendTxtAmount.setVisibility(View.GONE);\r\n            lendViewContact.setVisibility(View.VISIBLE);\r\n            lendTxtHeader.setText(CommonMethods.capitalize(getString(R.string.select_contact)));\r\n            //setContactAdapter();\r\n            nextButtonTV.setText(getString(R.string.submit));\r\n        }\r\n    }\r\n\r\n\r\n    private void selectedTermsOption(int isOption) {\r\n        isTermsOption = isOption;\r\n        setOptionAmount();\r\n        lendTermsTxtPercent.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.grey_bg_rounded));\r\n        lendTermsTxtFee.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.grey_bg_rounded));\r\n        lendTermsTxtDiscount.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.grey_bg_rounded));\r\n        lendTermsTxtNone.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.grey_bg_rounded));\r\n\r\n        lendTermsTxtPercent.setTextColor(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha));\r\n        lendTermsTxtFee.setTextColor(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha));\r\n        lendTermsTxtDiscount.setTextColor(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha));\r\n        lendTermsTxtNone.setTextColor(CommonMethods.getColorWrapper(this, R.color.navTextColor50Alpha));\r\n        lendTermsTxtOption.setVisibility(View.VISIBLE);\r\n        lendTermsEdtOption.setVisibility(View.VISIBLE);\r\n\r\n        Typeface typeface = ResourcesCompat.getFont(this, R.font.gotha_pro_reg);\r\n        lendTermsTxtPercent.setTypeface(typeface);\r\n        lendTermsTxtFee.setTypeface(typeface);\r\n        lendTermsTxtDiscount.setTypeface(typeface);\r\n        lendTermsTxtNone.setTypeface(typeface);\r\n\r\n        Typeface typefaceMed = ResourcesCompat.getFont(this, R.font.gotha_promed);\r\n        if (isOption == 0) {\r\n            lendTermsTxtPercent.setTypeface(typefaceMed);\r\n            lendTermsEdtOption.setHint(getString(R.string.Enter_percent));\r\n            lendTermsTxtOption.setText(getString(R.string.enter_percent));\r\n            lendTermsTxtPercent.setTextColor(CommonMethods.getColorWrapper(this, R.color.colorWhite));\r\n            lendTermsTxtPercent.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.dark_grey_bg_rounded));\r\n        } else if (isOption == 1) {\r\n            lendTermsTxtFee.setTypeface(typefaceMed);\r\n            lendTermsEdtOption.setHint(getString(R.string.Enter_fee));\r\n            lendTermsTxtOption.setText(getString(R.string.enter_fee));\r\n            lendTermsTxtFee.setTextColor(CommonMethods.getColorWrapper(this, R.color.colorWhite));\r\n            lendTermsTxtFee.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.dark_grey_bg_rounded));\r\n        } else if (isOption == 2) {\r\n            lendTermsTxtDiscount.setTypeface(typefaceMed);\r\n            lendTermsEdtOption.setHint(getString(R.string.Enter_discount));\r\n            lendTermsTxtOption.setText(getString(R.string.enter_discount));\r\n            lendTermsTxtDiscount.setTextColor(CommonMethods.getColorWrapper(this, R.color.colorWhite));\r\n            lendTermsTxtDiscount.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.dark_grey_bg_rounded));\r\n        } else if (isOption == 3) {\r\n            lendTermsTxtNone.setTypeface(typefaceMed);\r\n            lendTermsTxtOption.setVisibility(View.GONE);\r\n            lendTermsEdtOption.setVisibility(View.GONE);\r\n            lendTermsTxtNone.setTextColor(CommonMethods.getColorWrapper(this, R.color.colorWhite));\r\n            lendTermsTxtNone.setBackground(CommonMethods.getDrawableWrapper(this, R.drawable.dark_grey_bg_rounded));\r\n            // boolean bb = wValidationLib.isValidTerm(lendTermsInputLayout, lendTermsEdtOption, getString(R.string.important), \"\", false);\r\n        }\r\n    }\r\n\r\n    private void setBorrowData() {\r\n        amountTV.setText(\"$\" + String.valueOf(amount));\r\n        String termValue = lendTermsEdtOption.getText().toString().trim();\r\n        if (isTermsOption + 1 == 1) {\r\n            termTV.setText(termValue + \" \" + getString(R.string.percent));\r\n        } else if (isTermsOption + 1 == 2) {\r\n            termTV.setText(termValue + \" \" + getString(R.string.fee));\r\n        } else if (isTermsOption + 1 == 3) {\r\n            termTV.setText(termValue + \" \" + getString(R.string.discount));\r\n        } else if (isTermsOption + 1 == 4) {\r\n            termTV.setText(getString(R.string.none));\r\n        }\r\n\r\n        noOfPaymentTV.setText(String.valueOf(isNoPayment));\r\n       /* if (paybackList.get(0).isDateEpockFormate()) {\r\n            paymentDateTV.setText(DateFormat.getDateFromEpoch(paybackList.get(0).getPayDate()));\r\n        } else {\r\n            paymentDateTV.setText(paybackList.get(0).getPayDate());\r\n        }*/\r\n        paymentDateTV.setText(DateFormat.dateFormatConvert(paybackList.get(0).getPayDate()));\r\n        totalPayBackTV.setText(\"$\" + String.valueOf(finalTotalPayBackAmount));\r\n    }\r\n\r\n    private void setLendData() {\r\n        l_amountTV.setText(\"$\" + String.valueOf(amount));\r\n        String termValue = lendTermsEdtOption.getText().toString().trim();\r\n        if (isTermsOption + 1 == 1) {\r\n            // termTV.setText(\"@14% or $7.00\");\r\n            // termTV.setText(\"@\"+termValue+\"% or &\"+finalTotalAmount);\r\n            lTermTV.setText(termValue + \" \" + getString(R.string.percent));\r\n        } else if (isTermsOption + 1 == 2) {\r\n            lTermTV.setText(termValue + \" \" + getString(R.string.fee));\r\n        } else if (isTermsOption + 1 == 3) {\r\n            lTermTV.setText(termValue + \" \" + getString(R.string.discount));\r\n        } else if (isTermsOption + 1 == 4) {\r\n            // lTermTV.setText(termValue + \" \"+getString(R.string.none));\r\n            lTermTV.setText(getString(R.string.none));\r\n        }\r\n\r\n        lNoOfPaymentTV.setText(String.valueOf(isNoPayment));\r\n       /* if (paybackList.get(0).isDateEpockFormate()) {\r\n            lPaymentDateTV.setText(DateFormat.getDateFromEpoch(paybackList.get(0).getPayDate()));\r\n        } else {\r\n            lPaymentDateTV.setText(paybackList.get(0).getPayDate());\r\n        }*/\r\n\r\n        lPaymentDateTV.setText(DateFormat.dateFormatConvert(paybackList.get(0).getPayDate()));\r\n        totalReceivedBackTV.setText(\"$\" + String.valueOf(finalTotalPayBackAmount));\r\n    }\r\n\r\n    @Override\r\n    protected boolean useToolbar() {\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    protected boolean useDrawerToggle() {\r\n        return false;\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        setCurrentScreen(100);\r\n    }\r\n\r\n    private void callAPIGetContactList(int pageNo) {\r\n        if (pageNo == 0 && scrollListener != null) {\r\n            scrollListener.resetState();\r\n        }\r\n\r\n        HashMap<String, Object> values = apiCalling.getHashMapObject(\r\n                \"page\", pageNo);\r\n\r\n        String token = SharedPref.getPrefsHelper().getPref(Const.Var.TOKEN).toString();\r\n        try {\r\n            zapayApp.setApiCallback(this);\r\n            Call<JsonElement> call = restAPI.postWithTokenApi(token, getString(R.string.api_get_contact_list), values);\r\n            if (apiCalling != null) {\r\n                apiCalling.setRunInBackground(true);\r\n                apiCalling.callAPI(zapayApp, call, getString(R.string.api_get_contact_list), contactRecycler);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    private void callAPITransactionRequest() {\r\n        isTermsOption = isTermsOption + 1;\r\n        //private int isTermsOption, isNoPayment, paybackPos;\r\n\r\n        //request_type- 0=new, 1=update\r\n        String transactionId = \"\";\r\n        String request_type = \"0\";\r\n        if (transactionModel != null && transactionModel.getId() != null && transactionModel.getId().length() > 0) {\r\n            transactionId = transactionModel.getId();  //this condition for negotiation\r\n            request_type = \"1\";\r\n        }\r\n\r\n        JSONArray jsonArray = new JSONArray();\r\n        for (int i = 0; i < paybackList.size(); i++) {\r\n            try {\r\n                JSONObject jsonObject = new JSONObject();\r\n              /*  if (paybackList.get(i).isDateEpockFormate()) {\r\n                    jsonObject.put(\"date\", paybackList.get(i).getPayDate());\r\n                } else {\r\n                    jsonObject.put(\"date\", DateFormat.getEpochFromDate(paybackList.get(i).getPayDate()));\r\n                }*/\r\n\r\n                jsonObject.put(\"date\", paybackList.get(i).getPayDate());\r\n                jsonArray.put(i, jsonObject);\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        if (isTermsOption == 4) {\r\n            termValue = \"0\";\r\n        } else {\r\n            termValue = lendTermsEdtOption.getText().toString().trim();\r\n        }\r\n        HashMap<String, Object> values = apiCalling.getHashMapObject(\r\n                \"to_id\", toId,\r\n                \"amount\", amount,\r\n                \"total_amount\", finalTotalPayBackAmount,\r\n                \"terms_type\", isTermsOption,\r\n                \"terms_value\", termValue,\r\n                \"no_of_payment\", isNoPayment,\r\n                \"pay_date\", jsonArray.toString(),\r\n                \"request_by\", String.valueOf(request_by),   //1=lender,2=borrower\r\n                \"request_type\", request_type,\r\n                \"transaction_request_id\", transactionId);\r\n        Log.e(\"post\", \"post data======\" + values.toString());\r\n\r\n        String token = SharedPref.getPrefsHelper().getPref(Const.Var.TOKEN).toString();\r\n        try {\r\n            zapayApp.setApiCallback(this);\r\n            Call<JsonElement> call = restAPI.postWithTokenApi(token, getString(R.string.api_transaction_request), values);\r\n            if (apiCalling != null) {\r\n                apiCalling.setRunInBackground(false);\r\n                apiCalling.callAPI(zapayApp, call, getString(R.string.api_transaction_request), contactRecycler);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void apiCallback(JsonObject json, String from) {\r\n        if (from != null) {\r\n            int status = 0;\r\n            String msg = \"\";\r\n            try {\r\n                status = json.get(\"status\").getAsInt();\r\n                msg = json.get(\"message\").getAsString();\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            if (from.equals(getResources().getString(R.string.api_get_contact_list))) {\r\n                if (status == 200) {\r\n                    if (pageNo == 0) {\r\n                        contactNumberList.clear();\r\n                    }\r\n\r\n                    List<ContactModel> list = apiCalling.getDataList(json, \"data\", ContactModel.class);\r\n                    if (list.size() > 0) {\r\n                        noDataTv.setVisibility(View.GONE);\r\n                        contactRecycler.setVisibility(View.VISIBLE);\r\n                        contactNumberList.addAll(list);\r\n\r\n                        setContactAdapter();\r\n\r\n                    } else {\r\n                        if (pageNo == 0) {\r\n                            noDataTv.setVisibility(View.VISIBLE);\r\n                            contactRecycler.setVisibility(View.GONE);\r\n                        }\r\n                    }\r\n\r\n                } else if (status == 401) {\r\n                    showForceUpdate(getString(R.string.session_expired), getString(R.string.your_session_expired), false, \"\", false);\r\n                } else {\r\n                    if (pageNo == 0) {\r\n                        noDataTv.setVisibility(View.VISIBLE);\r\n                        contactRecycler.setVisibility(View.GONE);\r\n                        showSimpleAlert(msg, \"\");\r\n                    }\r\n                }\r\n\r\n\r\n            } else if (from.equals(getResources().getString(R.string.api_transaction_request))) {\r\n                if (status == 200) {\r\n                    //showSimpleAlert(msg, getResources().getString(R.string.api_transaction_request));\r\n                    Intent intent = new Intent(LendBorrowActivity.this, CongratulationActivity.class);\r\n                    intent.putExtra(\"message\", msg);\r\n                    startActivity(intent);\r\n                    finish();\r\n                } else if (status == 401) {\r\n                    showForceUpdate(getString(R.string.session_expired), getString(R.string.your_session_expired), false, \"\", false);\r\n                } else {\r\n                    showSimpleAlert(msg, \"\");\r\n                }\r\n            }else if (from.equals(getResources().getString(R.string.api_get_content))){\r\n                 JsonObject jsonObject= json.get(\"data\").getAsJsonObject();\r\n               if (jsonObject!=null&&jsonObject.has(\"page_description\")&&jsonObject.get(\"page_description\")!=null&&jsonObject.get(\"page_description\").getAsString().length()>0){\r\n                   privacyPolicyDialog(jsonObject.get(\"page_description\").getAsString());\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void getContact(ContactModel contactModel) {\r\n        toId = contactModel.getId();\r\n\r\n    }\r\n\r\n    private void callAPIGetContentDisclaimer(){\r\n        HashMap<String, Object> values = apiCalling.getHashMapObject(\r\n                \"content_type\", \"disclaimer\");\r\n        String token = SharedPref.getPrefsHelper().getPref(Const.Var.TOKEN).toString();\r\n        try {\r\n            zapayApp.setApiCallback(this);\r\n            Call<JsonElement> call = restAPI.postWithTokenApi(token, getString(R.string.api_get_content), values);\r\n            if (apiCalling != null) {\r\n                apiCalling.setRunInBackground(false);\r\n                apiCalling.callAPI(zapayApp, call, getString(R.string.api_get_content), contactRecycler);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void privacyPolicyDialog(String discription) {\r\n\r\n        Dialog dialog = new Dialog(LendBorrowActivity.this);\r\n        dialog.setContentView(R.layout.privacy_policy_dialog);\r\n        dialog.setCancelable(false);\r\n        dialog.setCanceledOnTouchOutside(false);\r\n        if (dialog.getWindow() != null) {\r\n            int w = CommonMethods.getScreenWidth() - 100;\r\n            dialog.getWindow().setLayout(w, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n            // dialog.getWindow().setLayout(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n            dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        }\r\n        dialog.show();\r\n        TextView discriptionTV = dialog.findViewById(R.id.discriptionTV);\r\n        discriptionTV.setText(discription);\r\n        TextView okTV = dialog.findViewById(R.id.okTV);\r\n        TextView cancelTV = dialog.findViewById(R.id.cancelTV);\r\n        CheckBox mChkAgree = dialog.findViewById(R.id.mChkAgree);\r\n        okTV.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (mChkAgree.isChecked()) {\r\n                    callAPITransactionRequest();\r\n                    dialog.dismiss();\r\n                } else {\r\n                    showSimpleAlert(getString(R.string.accept_disclaimer), \"\");\r\n                }\r\n            }\r\n        });\r\n\r\n        cancelTV.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/org/zapayapp/activity/LendBorrowActivity.java	(revision 6582c69cc436bd34ecddb8ff15dff88a8d96c4a7)
+++ app/src/main/java/com/org/zapayapp/activity/LendBorrowActivity.java	(date 1609250746201)
@@ -1,4 +1,5 @@
 package com.org.zapayapp.activity;
+
 import android.app.Dialog;
 import android.content.Intent;
 import android.graphics.Color;
@@ -18,12 +19,14 @@
 import android.widget.CheckBox;
 import android.widget.LinearLayout;
 import android.widget.TextView;
+
 import androidx.annotation.Nullable;
 import androidx.core.content.res.ResourcesCompat;
 import androidx.fragment.app.DialogFragment;
 import androidx.recyclerview.widget.DefaultItemAnimator;
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
+
 import com.dd.ShadowLayout;
 import com.google.android.material.textfield.TextInputEditText;
 import com.google.gson.JsonElement;
@@ -45,13 +48,16 @@
 import com.org.zapayapp.utils.SharedPref;
 import com.org.zapayapp.utils.WVDateLib;
 import com.org.zapayapp.webservices.APICallback;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
+
 import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
+
 import retrofit2.Call;
 
 public class LendBorrowActivity extends BaseActivity implements View.OnClickListener, DatePickerFragmentDialogue.DatePickerCallback, APICallback, ContactListener {
@@ -133,7 +139,6 @@
         listIndicator = new ArrayList<>();
         wvDateLib = new WVDateLib(this);
 
-
         dateListTitle = new ArrayList<>();
         dateListTitle.add(getString(R.string.first_select_date));
         dateListTitle.add(getString(R.string.second_select_date));
@@ -158,6 +163,7 @@
             request_by = 1;
             listIndicator.add(getString(R.string.lending_summary_));
         }
+
         listIndicator.add(getString(R.string.select_contact));
 
         indicatorAdapter = new IndicatorAdapter(this, listIndicator, isBorrow);
@@ -534,7 +540,7 @@
                     callAPITransactionRequest();
                 } else {
                     callAPIGetContentDisclaimer();
-                   // privacyPolicyDialog();
+                    // privacyPolicyDialog();
                 }
             }
         } else {
@@ -1131,12 +1137,11 @@
                 } else {
                     showSimpleAlert(msg, "");
                 }
-            }else if (from.equals(getResources().getString(R.string.api_get_content))){
-                 JsonObject jsonObject= json.get("data").getAsJsonObject();
-               if (jsonObject!=null&&jsonObject.has("page_description")&&jsonObject.get("page_description")!=null&&jsonObject.get("page_description").getAsString().length()>0){
-                   privacyPolicyDialog(jsonObject.get("page_description").getAsString());
+            } else if (from.equals(getResources().getString(R.string.api_get_content))) {
+                JsonObject jsonObject = json.get("data").getAsJsonObject();
+                if (jsonObject != null && jsonObject.has("page_description") && jsonObject.get("page_description") != null && jsonObject.get("page_description").getAsString().length() > 0) {
+                    privacyPolicyDialog(jsonObject.get("page_description").getAsString());
                 }
-
             }
         }
     }
@@ -1147,7 +1152,7 @@
 
     }
 
-    private void callAPIGetContentDisclaimer(){
+    private void callAPIGetContentDisclaimer() {
         HashMap<String, Object> values = apiCalling.getHashMapObject(
                 "content_type", "disclaimer");
         String token = SharedPref.getPrefsHelper().getPref(Const.Var.TOKEN).toString();
@@ -1161,11 +1166,9 @@
         } catch (Exception e) {
             e.printStackTrace();
         }
-
     }
 
     private void privacyPolicyDialog(String discription) {
-
         Dialog dialog = new Dialog(LendBorrowActivity.this);
         dialog.setContentView(R.layout.privacy_policy_dialog);
         dialog.setCancelable(false);
Index: app/src/main/java/com/org/zapayapp/activity/ProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.org.zapayapp.activity;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport androidx.annotation.NonNull;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.gson.JsonElement;\r\nimport com.google.gson.JsonObject;\r\nimport com.org.zapayapp.R;\r\nimport com.org.zapayapp.dialogs.ChangePassDialogActivity;\r\nimport com.org.zapayapp.dialogs.EditProfileDialogActivity;\r\nimport com.org.zapayapp.utils.CommonMethods;\r\nimport com.org.zapayapp.utils.Const;\r\nimport com.org.zapayapp.utils.ImagePathUtil;\r\nimport com.org.zapayapp.utils.MySession;\r\nimport com.org.zapayapp.utils.SharedPref;\r\nimport com.org.zapayapp.utils.WFileUtils;\r\nimport com.org.zapayapp.utils.WRuntimePermissions;\r\nimport com.org.zapayapp.webservices.APICalling;\r\nimport java.io.File;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.MultipartBody;\r\nimport okhttp3.RequestBody;\r\nimport retrofit2.Call;\r\n\r\npublic class ProfileActivity extends BaseActivity implements View.OnClickListener {\r\n    private TextView editProfileTV, changePasswordTV,setPinTV, profileTxtName, profileTxtEmail, profileTxtMobile, profileTxtAddress;\r\n    private Intent intent;\r\n    private ImageView profileImageView;\r\n    private WRuntimePermissions runtimePermissions;\r\n    private String path = \"\";\r\n    private static final int GALLERY_REQUEST_OLD = 1890;\r\n    private static final int GALLERY_REQUEST = 200;\r\n    private boolean isDataUpdate=true;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_profile);\r\n        init();\r\n        initAction();\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        setCurrentScreen(MY_PROFILE);\r\n\r\n        if (isDataUpdate){\r\n            callAPIGetUserDetail();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        isDataUpdate=true;\r\n    }\r\n\r\n    @Override\r\n    protected boolean useToolbar() {\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    protected boolean useDrawerToggle() {\r\n        return false;\r\n    }\r\n\r\n    private void init() {\r\n        runtimePermissions = new WRuntimePermissions(this);\r\n        changePasswordTV = findViewById(R.id.changePasswordTV);\r\n        setPinTV = findViewById(R.id.setPinTV);\r\n        editProfileTV = findViewById(R.id.editProfileTV);\r\n        profileTxtName = findViewById(R.id.profileTxtName);\r\n        profileTxtEmail = findViewById(R.id.profileTxtEmail);\r\n        profileTxtMobile = findViewById(R.id.profileTxtMobile);\r\n        profileTxtAddress = findViewById(R.id.profileTxtAddress);\r\n        profileImageView = findViewById(R.id.profileImageView);\r\n    }\r\n\r\n    private void initAction() {\r\n        changePasswordTV.setOnClickListener(this);\r\n        setPinTV.setOnClickListener(this);\r\n        editProfileTV.setOnClickListener(this);\r\n        profileImageView.setOnClickListener(this);\r\n        setDataOnScreen();\r\n    }\r\n\r\n    private void setDataOnScreen() {\r\n        if (SharedPref.getPrefsHelper().getPref(Const.Var.PROFILE_IMAGE) != null && SharedPref.getPrefsHelper().getPref(Const.Var.PROFILE_IMAGE).toString().length() > 0) {\r\n            Glide.with(ProfileActivity.this)\r\n                    .load(APICalling.getImageUrl(SharedPref.getPrefsHelper().getPref(Const.Var.PROFILE_IMAGE).toString()))\r\n                    .placeholder(R.mipmap.default_profile)\r\n                    .into(profileImageView);\r\n        }\r\n        if (SharedPref.getPrefsHelper().getPref(Const.Var.FIRST_NAME) != null && SharedPref.getPrefsHelper().getPref(Const.Var.FIRST_NAME).toString().length() > 0) {\r\n            String name = SharedPref.getPrefsHelper().getPref(Const.Var.FIRST_NAME, \"\") + \" \" + SharedPref.getPrefsHelper().getPref(Const.Var.LAST_NAME, \"\");\r\n            profileTxtName.setText(name);\r\n        }\r\n        if (SharedPref.getPrefsHelper().getPref(Const.Var.EMAIL) != null && SharedPref.getPrefsHelper().getPref(Const.Var.EMAIL).toString().length() > 0) {\r\n            profileTxtEmail.setText(SharedPref.getPrefsHelper().getPref(Const.Var.EMAIL, \"\"));\r\n        }\r\n        if (SharedPref.getPrefsHelper().getPref(Const.Var.MOBILE) != null && SharedPref.getPrefsHelper().getPref(Const.Var.MOBILE).toString().length() > 0) {\r\n            profileTxtMobile.setText(SharedPref.getPrefsHelper().getPref(Const.Var.MOBILE, \"\"));\r\n        }\r\n        if (SharedPref.getPrefsHelper().getPref(Const.Var.ADDRESS1) != null && SharedPref.getPrefsHelper().getPref(Const.Var.ADDRESS1).toString().length() > 0) {\r\n            profileTxtAddress.setText(SharedPref.getPrefsHelper().getPref(Const.Var.ADDRESS1, \"\"));\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.changePasswordTV:\r\n                intent = new Intent(ProfileActivity.this, ChangePassDialogActivity.class);\r\n                startActivity(intent);\r\n                break;\r\n            case R.id.setPinTV:\r\n                intent = new Intent(ProfileActivity.this, SetPinActivity.class);\r\n                intent.putExtra(\"forWhat\",getString(R.string.update_pin));\r\n                startActivity(intent);\r\n                break;\r\n\r\n            case R.id.editProfileTV:\r\n                intent = new Intent(ProfileActivity.this, EditProfileDialogActivity.class);\r\n                startActivity(intent);\r\n                break;\r\n            case R.id.profileImageView:\r\n                if (Build.VERSION.SDK_INT >= 23) {\r\n                    if (runtimePermissions.checkPermissionForStorage()) {\r\n                        openGallery();\r\n                    } else {\r\n                        runtimePermissions.requestPermissionForStorage();\r\n                    }\r\n                } else {\r\n                    openGallery();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void openGallery() {\r\n        try {\r\n            if (Build.VERSION.SDK_INT >= 19) {\r\n                intent = new Intent(Intent.ACTION_OPEN_DOCUMENT);\r\n                intent.addCategory(Intent.CATEGORY_OPENABLE);\r\n                intent.setType(\"image/*\");\r\n                intent.putExtra(Intent.EXTRA_MIME_TYPES, new String[]{\"image/*\"});\r\n                intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, false);\r\n                startActivityForResult(intent, GALLERY_REQUEST);\r\n            } else {\r\n                if (WFileUtils.isSdPresent()) {\r\n                    intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                    startActivityForResult(intent, GALLERY_REQUEST_OLD);\r\n                } else {\r\n                    String no_sdcard = \"No sd card present\";\r\n                    CommonMethods.showToast(this, no_sdcard);\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * request permission result to show if runtime permission is accepted\r\n     *\r\n     * @param requestCode  request code to identify method\r\n     * @param permissions  permission requested\r\n     * @param grantResults if permission is given\r\n     */\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch (requestCode) {\r\n            case WRuntimePermissions.REQUEST_CODE_STORAGE:\r\n                if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    openGallery();\r\n                } else if (grantResults[0] == PackageManager.PERMISSION_DENIED) {\r\n                    if (runtimePermissions.requestPermissionForStorageDenied()) {\r\n                        runtimePermissions.showAlertDialog(WRuntimePermissions.STORAGE_MSG, WRuntimePermissions.REQUEST_CODE_STORAGE, this);\r\n                    } else {\r\n                        runtimePermissions.openSettingsDialog(WRuntimePermissions.STORAGE_MSG_DESC, this);\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        // Result returned from launching the Intent from GoogleSignInClient.getSignInIntent(...);\r\n        if (requestCode == GALLERY_REQUEST_OLD && resultCode == Activity.RESULT_OK) {\r\n            try {\r\n                Uri selectedImage = data.getData();\r\n                if (selectedImage != null) {\r\n                    String[] filePath = {MediaStore.Images.Media.DATA};\r\n                    Cursor c = getContentResolver().query(selectedImage, filePath,\r\n                            null, null, null);\r\n                    if (c != null) {\r\n                        c.moveToFirst();\r\n                        int columnIndex = c.getColumnIndex(filePath[0]);\r\n                        String picturePath = c.getString(columnIndex);\r\n                        c.close();\r\n                        try {\r\n                            String path = picturePath;\r\n                            if (path != null){\r\n                               // Glide.with(ProfileActivity.this).load(path).placeholder(R.mipmap.ic_user).into(profileImageView);\r\n                            }\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    }\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else if (requestCode == GALLERY_REQUEST && resultCode == Activity.RESULT_OK) {\r\n            isDataUpdate=false;\r\n            if (data != null) {\r\n                try {\r\n                    Uri selectedUri = data.getData();\r\n                    if (selectedUri != null) {\r\n                        path = selectedUri.getPath();\r\n                        try {\r\n                            if (path != null) {\r\n                                //path = WFileUtils.getFilePath(this, selectedUri);\r\n                                Glide.with(ProfileActivity.this).load(selectedUri).placeholder(R.mipmap.ic_user).into(profileImageView);\r\n                                path = ImagePathUtil.getPath(ProfileActivity.this, selectedUri);\r\n                                path = ImagePathUtil.compressImage(path);\r\n                                callAPIUploadFile();\r\n                            }\r\n                        } catch (Exception e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                    } else {\r\n                        //CommonMethods.showLogs(TAG, \" get file uri is null\");\r\n                    }\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void callAPIUploadFile() {\r\n        File file = new File(path);\r\n        RequestBody requestBody = RequestBody.create(MediaType.parse(\"multipart/form-data\"), file);\r\n        MultipartBody.Part fileToUpload = MultipartBody.Part.createFormData(\"profile_image\", file.getName(), requestBody);\r\n        try {\r\n            zapayApp.setApiCallback(this);\r\n            Call<JsonElement> call = restAPI.postWithTokenMultiPartApi(SharedPref.getPrefsHelper().getPref(Const.Var.TOKEN).toString(), getString(R.string.api_update_profile_image), fileToUpload);\r\n            if (apiCalling != null) {\r\n                apiCalling.setRunInBackground(false);\r\n                apiCalling.callAPI(zapayApp, call, getString(R.string.api_update_profile_image), profileImageView);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void callAPIGetUserDetail() {\r\n        String token = SharedPref.getPrefsHelper().getPref(Const.Var.TOKEN).toString();\r\n        try {\r\n            zapayApp.setApiCallback(this);\r\n            Call<JsonElement> call = restAPI.getApiToken(token, getString(R.string.api_get_user_details));\r\n            if (apiCalling != null) {\r\n                apiCalling.callAPI(zapayApp, call, getString(R.string.api_get_user_details), profileImageView);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void apiCallback(JsonObject json, String from) {\r\n        if (from != null) {\r\n            int status = 0;\r\n            String msg = \"\";\r\n            try {\r\n                status = json.get(\"status\").getAsInt();\r\n                msg = json.get(\"message\").getAsString();\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n            if (from.equals(getResources().getString(R.string.api_update_profile_image))) {\r\n                if (status == 200) {\r\n                    path = \"\";\r\n                    if (json.get(\"data\").getAsJsonObject() != null) {\r\n                        JsonObject jsonObject = json.get(\"data\").getAsJsonObject();\r\n                        if (jsonObject.get(\"profile_image\").getAsString() != null) {\r\n                            String profile_image = jsonObject.get(\"profile_image\").getAsString();\r\n                            SharedPref.getPrefsHelper().savePref(Const.Var.PROFILE_IMAGE, profile_image);\r\n                        }\r\n                    }\r\n                    showSimpleAlert(msg, \"\");\r\n                } else if (status == 401) {\r\n                    showForceUpdate(getString(R.string.session_expired), getString(R.string.your_session_expired), false, \"\", false);\r\n\r\n                } else {\r\n                    showSimpleAlert(msg, \"\");\r\n                }\r\n            } else if (from.equals(getResources().getString(R.string.api_get_user_details))) {\r\n                if (status == 200) {\r\n                    if (json.get(\"data\").getAsJsonObject() != null) {\r\n                        JsonObject jsonObject = json.get(\"data\").getAsJsonObject();\r\n                        MySession.MakeSession(jsonObject);\r\n                        setDataOnScreen();\r\n                    }\r\n                } else if (status == 401) {\r\n                    showForceUpdate(getString(R.string.session_expired), getString(R.string.your_session_expired), false, \"\", false);\r\n\r\n                } else {\r\n                    showSimpleAlert(msg, \"\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/org/zapayapp/activity/ProfileActivity.java	(revision 6582c69cc436bd34ecddb8ff15dff88a8d96c4a7)
+++ app/src/main/java/com/org/zapayapp/activity/ProfileActivity.java	(date 1610952126183)
@@ -8,7 +8,6 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.provider.MediaStore;
-import android.util.Log;
 import android.view.View;
 import android.widget.ImageView;
 import android.widget.TextView;
